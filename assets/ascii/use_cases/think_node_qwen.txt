
ASCII-Grafik zum Use Case "Think Node Qwen":

      Nutzer stellt KI eine Frage
                    │
                    ▼
       ┌──────────────────────────────┐
       │      KI-Modell: QWEN         │
       │  (z. B. via CAIR4 Prompt UI) │
       └────────────┬────────────────┘
                    ▼
         ┌────────────────────────┐
         │    Antwortformat:      │
         │ <think>                │
         │   Schritt 1            │
         │   Schritt 2            │
         │ </think>               │
         │ Letzte Antwortzeile    │
         └────────────┬───────────┘
                      ▼
         Chain of Thought wird ausgelesen
            und separat angezeigt
                      │
                      ▼
           CoT und finale Antwort
            werden einzeln gerendert

        🧠 Ziel: Denkstruktur sichtbar
        machen, ohne Node-RED zu nutzen


╔════════════════════════════════════════════════════════════╗
║         THINKING METHODS IN KI: CoT vs. Reasoning vs. Node ║
╚════════════════════════════════════════════════════════════╝

               Nutzer stellt komplexe Frage
                            │
                            ▼
            ┌────────────────────────────────────┐
            │    Chain of Thought (CoT)          │
            │    "Denke Schritt für Schritt"     │
            └────────────────────────────────────┘
                     │      │      │
             ┌───────┘      ▼      └────────┐
             ▼                        ┌────────────┐
   Schritt 1: Analyse des Kontexts    │ Schritt n  │
   Schritt 2: Teilantwort 1           │ Fazit      │
   Schritt 3: Verknüpfung             └────────────┘
                 ⋮
           Mehrere manuell-logische Denkphasen
                     ↓
         ➤ Mehr Transparenz, aber nicht immer optimal

──────────────────────────────────────────────────────────────
      🔍 Unterschied zu Reasoning (generelles Schlussfolgern):

┌─────────────────────────────────────────────────────────────┐
│  Reasoning ist die *Fähigkeit*, Probleme zu durchdenken,    │
│  logische Muster zu erkennen und basierend auf Fakten zu    │
│  urteilen. CoT ist *eine Methode*, diese Fähigkeit zu       │
│  strukturieren und explizit zu machen.                      │
└─────────────────────────────────────────────────────────────┘

──────────────────────────────────────────────────────────────
      🧠 Unterschied zu Think Node (Agenten, Tools):

┌─────────────────────────────────────────────────────────────┐
│  Think Nodes sind *aktive Module* in Multi-Step-Systemen.   │
│  Sie "entscheiden", ob die KI z. B. eine externe Suche      │
│  ausführen, rechnen oder weitere Rückfragen stellen soll.   │
│  ➤ Entscheidungsknoten mit ggf. CoT-Input                   │
└─────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════╗
║ ➤ CoT = Technik / Reasoning = Fähigkeit / Think Node = Logik-Knoten  ║
╚══════════════════════════════════════════════════════════════════════╝